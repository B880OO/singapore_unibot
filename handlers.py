from aiogram import Dispatcher, types, F, Router
from aiogram.filters import Command
from keyboard import main_menu_kb, group_choice_kb

from timetable import load_cached_schedule, update_schedule_for_group
from admin import AdminMiddleware

admin_router = Router()
admin_router.message.middleware(AdminMiddleware())

@admin_router.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=main_menu_kb)

# üìå –ö–Ω–æ–ø–∫–∞ "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ" ‚Üí –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã
@admin_router.callback_query(F.data == "choose_schedule_group")
async def choose_schedule(callback: types.CallbackQuery):
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É:", reply_markup=group_choice_kb)

# üóì –í—ã–≤–æ–¥ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ –≥—Ä—É–ø–ø–µ
@admin_router.callback_query(F.data.startswith("group_"))
async def send_schedule(callback: types.CallbackQuery):
    group_id = int(callback.data.split("_")[1])
    schedule = load_cached_schedule(group_id)
    if schedule == "‚ö†Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ.":
        schedule = await callback.message.answer("–û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ...")
        await update_schedule_for_group(group_id)

    await schedule.edit_text(f"<b>üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã {group_id}:</b>\n\n{schedule[:4000]}")
